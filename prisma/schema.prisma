generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  role          Role      @default(USER)
  image         String?
  accounts      Account[]
  sessions      Session[]
 
  @@map("users")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}


model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Listing {
  id              Int      @id @default(autoincrement())
  title           String
  description     String
  price           Int
  location        String
  zipCode         Int
  propertyType    String
  bedrooms        Int
  bathrooms       Int
  area            Int
  energyclass     String?
  floors          Int
  buildingFloors  Int
  elevator        Boolean
  furnished       String
  balcony         Boolean
  garage          Int
  heating         String
  listingType     String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  images          Image[]
}

model Image {
  id        Int     @id @default(autoincrement())
  url       String
  listingId Int
  listing   Listing @relation(fields: [listingId], references: [id])
}

enum  Role {
  ADMIN
  USER
}

enum PropertyType {
  HOUSE
  APARTMENT
  CONDO
  LAND
}

enum ListingType {
  FOR_SALE
  FOR_RENT
  SOLD
}
